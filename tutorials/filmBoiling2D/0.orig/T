/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    object      T;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 1 0 0 0];

internalField    #codeStream
{
	codeInclude
	#{
		#include "fvCFD.H"
	#};
        
	codeOptions
	#{
		-I$(LIB_SRC)/finiteVolume/lnInclude \
		-I$(LIB_SRC)/meshTools/lnInclude
	#};

	codeLibs
	#{
		-lmeshTools \
		-lfiniteVolume
	#};
	code
	#{
       	const IOdictionary& d = static_cast<const IOdictionary&>(dict);
		const fvMesh& mesh = refCast<const fvMesh>(d.db());
		scalar lambda = 2.29922953E-03;
        scalar deltaT = 5.;
        scalar Twall = 651;
        scalar Tliquid = 646;
        scalarField T(mesh.nCells(), Tliquid);
		forAll(T, i)
		{
			const scalar x = mesh.C()[i][0];
			const scalar y = mesh.C()[i][1];
			if ( y <= lambda/128*(4+cos(2*constant::mathematical::pi*x/lambda)) )
			{
				T[i] = -deltaT*y / (lambda/128 * (4 + cos(2*constant::mathematical::pi*x/lambda))) + Twall;
			}
		}
		T.writeEntry("", os);
	#};
};

boundaryField
{
    up
    {
        type            inletOutlet;
        inletValue      uniform 646.;
        value           uniform 646.;
    }
    "wall.*"
    {
        type            cyclic;
    }
    down
    {
        type            fixedValue;
        value           uniform 651;
    }
    frontAndBack
    {
        type            empty;
    }
}

// ************************************************************************* //
